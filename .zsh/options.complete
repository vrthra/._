# newstyle completion
fpath=(~/.zsh $fpath)
autoload -U compinit && compinit

#------------------------------------------------------------------------------
# New style verbose matches.
# zstyle "context-pattern" style value
# zstyle ':completion:*:complete:ls:*:*' verbose no
#
# %B bold %b  %S standout %s %U underline %u
#------------------------------------------------------------------------------
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
# zstyle ':completion:*:descriptions' format "- %d -"
# zstyle ':completion:*:corrections' format "- %d - (errors %e})"
# zstyle ':completion:*:default' list-prompt '%S%M matches%s'
# zstyle ':completion:*:manuals' separate-sections true
# zstyle ':completion:*:manuals.(^1*)' insert-sections true
# zstyle ':completion:*' rehash yes
# zstyle -e ':completion:*:approximate:*' max-errors \
#           'reply=( $(( ($#PREFIX + $#SUFFIX) / 3 )) )'

zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'Tried : %d'
zstyle ':completion:*' group-name ''
#------------------------------------------------------------------------------
# Show completion menu when the number options is atleast 2
zstyle ':completion:*' menu select=2
#------------------------------------------------------------------------------
# use a cache when completion function is slow e.g _apt, _dpkg
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
#------------------------------------------------------------------------------
zstyle ':completion:*:cd:*' ignored-patterns '(*/)#CVS'         ## No CVS in cd
zstyle ':completion:*:cd:*' ignored-patterns '(*/)#lost+found'  ## and no lost+found
#------------------------------------------------------------------------------
#
## pids
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'

#zstyle ':completion:*:*:kill:*:processes' command 'ps --forest -A -o pid,user,cmd'
#zstyle ':completion:*:processes-names' command 'ps axho command'
#zstyle ':completion:*:urls' local 'www' '/var/www/htdocs' 'public_html'

#zstyle ':completion:*' hosts $(awk '/^[^#]/ {print $2 $3" "$4" "$5}' /etc/hosts | grep -v ip6- && grep "^#%" /etc/hosts | awk -F% '{print $2}')

zstyle ':completion:*:*:*:*:processes' menu yes select
zstyle ':completion:*:*:*:*:processes' force-list always
zstyle ':completion:*:*:*:*:processes' list-colors "=(#b) #([0-9]#)*=36=31"

zstyle ':completion:*:processes' command 'ps -au$USER'

# This would get completed on commands that use url
zstyle ':completion:*:urls' urls ~/.urls
zstyle ':completion:*:remote' remote ~/.urls
#------------------------------------------------------------------------------
#ssh
#zstyle ':completion:*:scp:*' tag-order \
# files users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
#zstyle ':completion:*:scp:*' group-order \
# files all-files users hosts-domain hosts-host hosts-ipaddr
#zstyle ':completion:*:ssh:*' tag-order \
# users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
#zstyle ':completion:*:ssh:*' group-order \
# hosts-domain hosts-host users hosts-ipaddr

#------------------------------------------------------------------------------
# completions for some progs. not in default completion system
zstyle ':completion:*:*:mpg123:*' file-patterns '*.(mp3|MP3):mp3\ files *(-/):directories'
zstyle ':completion:*:*:ogg123:*' file-patterns '*.(ogg|OGG):ogg\ files *(-/):directories'

zstyle ':completion:*:*:puppet:*' file-patterns '*.pp:Puppet\ Mainfests *(-/):directories'

#------------------------------------------------------------------------------
xdvi() { command xdvi ${*:-*.dvi(om[1])} }
zstyle ':completion:*:*:xdvi:*' menu yes select
zstyle ':completion:*:*:xdvi:*' file-sort time

#------------------------------------------------------------------------------
# ssh auto
#------------------------------------------------------------------------------
#local _myhosts
#_myhosts=( ${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[0-9]*}%%\ *}%%,*} )
#zstyle ':completion:*' hosts $_myhosts
groups=( "${(@)${(@f)$(</etc/group)}%%:*}" )
users=( "${(@)${(@f)$(</etc/passwd)}%%:*}" )
ports=( "${(@)${(@)${(@f)$(</etc/services)}:#\#*}%%[   ]*}" )

# zstyle ':completion:*:mutt:*' users $muttusers
# zstyle ':completion:*:mail:*' users $mailusers

zstyle ':completion:*' users $users
zstyle ':completion:*' hosts $hosts $sshhosts
zstyle ':completion:*' groups $groups

zstyle ':completion:*:(ssh|scp|ftp):*' hosts $hosts
zstyle ':completion:*:(ssh|scp|ftp):*' users $users


#zstyle ':completion:*' ports $ports
#------------------------------------------------------------------------------
# Assume first part of path to be exact and avoid partial globs.
zstyle ':completion:*' accept-exact '*(N)'
#------------------------------------------------------------------------------
# (user,host) pairs

# All my accounts:
#my_accounts=(
#    joe:
#    {joe,root}:mymachine.com
#    jbloggs:myothermachine.com
#)

# Other people's accounts:
#other_accounts=(
#    bob:
#    {fred,root}:hismachine.com
#    vera:hermachine.com
#)

#zstyle '*:my-accounts' users-hosts $my_accounts
#zstyle '*:other-accounts' users-hosts $other_accounts

# (host, port, user) triples for telnet

#  telnet_hosts_ports_users=(
#    host1::user1
#    host2::user2
#    mail-server:{smtp,pop3}:
#    news-server:nntp:
#    proxy-server:8000:
#  )
# }}}
# zstyle ':completion:*' users-hosts koan@vervloesem.eu kvervloe@discovery.example.org
#zstyle ':completion:*' users-hosts koan@vervloesem.eu kvervloe@discovery.example.org
#------------------------------------------------------------------------------
# Debug help. Unfunction every thing and autoload everything in .zfun
#------------------------------------------------------------------------------
r() {
  local f
  f=(~/.zsh/*(.))
  unfunction $f:t 2> /dev/null
  autoload -U $f:t
}
# or autoload -Uz hello
# see https://github.com/thrig/zsh-compdef
#------------------------------------------------------------------------------
# Use ^O to accept the current selection
zmodload zsh/complist
bindkey -M menuselect '' accept-and-infer-next-history
#------------------------------------------------------------------------------
# Show waiting dots while tab completes
#------------------------------------------------------------------------------
expand-or-complete-with-dots() {
  echo -n "\e[31m......\e[0m"
  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots
bindkey "	" expand-or-complete-with-dots

# zstyle -L
zstyle-list-patterns () {
  local tmp
  zstyle -g tmp
  print -rl -- "${(@o)tmp}"
}

#------------------------------------------------------------------------------
# compdef
#------------------------------------------------------------------------------
# Use _users function (standard defined) for completing mysu
# compdef _users mysu
# _pids _groups _hosts
