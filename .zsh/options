#------------------------------------------------------------------------------
# Extended globing: zshexpn
#    list all symlinks in dir => ls *(@)
#    ls **/*.rb             : recursive globbing
#    ls ***/*.rb            : follow symlinks
#    ls [^f]oo              : any _oo except foo
#    ls ^(foo|bar)          : any except foo or bar
#
# -approximate matching:
#    ls (#a1)foobar         : correct upto one mistake. (#a<n>)
#
# -qualifiers (#q_)   at the end of match in (). - can be combined
#                   . regular @ symlinks / dirs = sockets p named_pieps
#                   * excutable
#                   r w x owner:read,write,exec
#    ls ./*(#q@)          : all symlinks
#    ls ./*(#q.)          : all regular files
#    echo ./*(#q/)        : all dirs
#    echo ./*(#q^/)       : all except dirs
#     echo ./*(#qx)(#q^/) : all executable not dir
#------------------------------------------------------------------------------
setopt extendedglob
#------------------------------------------------------------------------------
# echo animal==cat -> animal=/bin/cat
setopt magicequalsubst
#------------------------------------------------------------------------------
setopt NO_sh_file_expansion
#setopt correct
#------------------------------------------------------------------------------
# perform cd if specified directly without 'cd' and dir exists
setopt autocd
#------------------------------------------------------------------------------
# make cd push old dir to dirstack
setopt autopushd
#------------------------------------------------------------------------------
setopt pushdignoredups
#------------------------------------------------------------------------------
# get zsh to print exit value on failure of cmd
setopt printexitvalue
#------------------------------------------------------------------------------
# dont move to the end of word on completion
setopt complete_in_word
#------------------------------------------------------------------------------
setopt shwordsplit
#------------------------------------------------------------------------------
# allow for i in *; echo $i
# also select, if , function
setopt shortloops

#------------------------------------------------------------------------------
# rc shell like command execution. e.g PATH=.home/bin, file=.home/bin/sunos/me
# sunos/me is executed
setopt pathdirs
#------------------------------------------------------------------------------
setopt histverify # ask user before execution
setopt histignoredups
setopt histignorespace  # ignore commands with space in front.
setopt histnostore # ignore fc commands in history
#------------------------------------------------------------------------------
# disable ^Q, ^S
unset flowcontrol
#------------------------------------------------------------------------------
# rather annoying feature.
unsetopt sharehistory
#------------------------------------------------------------------------------
# eval prompt each time use PRMOMPT="$(fn)"
setopt promptsubst

#------------------------------------------------------------------------------
# VI Options.
#------------------------------------------------------------------------------
set -o vi
bindkey -v
bindkey '^Z' accept-and-hold
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line
bindkey '^R' push-line
bindkey '^X' execute-named-cmd
bindkey '^K' vi-kill-line
bindkey '^F' _correct_filename
#^D - show completion

# Incremental search
bindkey -M vicmd "//" history-beginning-search-backward
bindkey -M vicmd "??" history-beginning-search-forward

#------------------------------------------------------------------------------
# On vi mode, use q like ^R
bindkey -M vicmd "q" push-line
bindkey -M vicmd 'u' undo
bindkey -M vicmd 'z' accept-and-hold

bindkey '\e[A' up-line-or-history
bindkey '\e[B' down-line-or-history

bindkey '\eOA' up-line-or-history
bindkey '\eOB' down-line-or-history

bindkey '\e[C' forward-char
bindkey '\e[D' backward-char

bindkey '\eOC' forward-char
bindkey '\eOD' backward-char

# go into vi mode for commands
# avoids the annoing delay on /
bindkey '\e/' vi-history-search-backward
